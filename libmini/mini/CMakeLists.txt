PROJECT(libMini)

# usage:
#
#    1: cmake -DLIBMINI_THIRDPARTY_DIR="..." .
#    2: setenv LIBMINI_THIRDPARTY_DIR "..."; cmake .
#    3: cmake -D<libname>_LIBRARY="..." -D<libname>_INCLUDE_DIR="..." .
#       where <libname> is any of {PTHREAD,OPENTHREADS,CURL,JPEG,PNG,ZLIB,SQUISH,GREYCSTORATION,GLUT}

INCLUDE(${CMAKE_CURRENT_SOURCE_DIR}/libMini-config.cmake)

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})

ADD_LIBRARY(Mini ${MINI_SRCS})
TARGET_LINK_LIBRARIES(Mini ${OPENGL_LIBRARIES})

ADD_LIBRARY(MiniSFX ${MINISFX_SRCS})
TARGET_LINK_LIBRARIES(MiniSFX
   Mini
   ${OPENGL_LIBRARIES}
   ${THREAD_LIBRARY}
   ${CURL_LIBRARY}
   ${JPEG_LIBRARY}
   ${PNG_LIBRARY}
   ${ZLIB_LIBRARY}
   ${SQUISH_LIBRARY}
   )

MACRO(MAKE_EXECUTABLE name)
   ADD_EXECUTABLE(${name} ${name}.cpp)
   TARGET_LINK_LIBRARIES(${name}
      Mini
      MiniSFX
      ${OPENGL_LIBRARIES}
      ${THREAD_LIBRARY}
      ${CURL_LIBRARY}
      ${JPEG_LIBRARY}
      ${PNG_LIBRARY}
      ${ZLIB_LIBRARY}
      ${SQUISH_LIBRARY}
      ${GLUT_LIBRARY}
      )
   IF (WIN32)
      TARGET_LINK_LIBRARIES(${name} ws2_32)
   ENDIF (WIN32)
ENDMACRO(MAKE_EXECUTABLE)

MAKE_EXECUTABLE(example)
MAKE_EXECUTABLE(viewer)

ADD_SUBDIRECTORY(tools)

INSTALL(
   TARGETS Mini MiniSFX viewer
   LIBRARY DESTINATION lib
   ARCHIVE DESTINATION lib
   RUNTIME DESTINATION bin
   )

INSTALL(
   FILES ${MINI_HDRS}
   DESTINATION include/mini
   )
