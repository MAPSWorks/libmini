# cmake build file for libMini
# (c) by Stefan Roettger
#
# usage:
#
#    1: cmake .
#    2: cmake -DLIBMINI_THIRDPARTY_DIR="..." .
#    3: setenv LIBMINI_THIRDPARTY_DIR "..."; cmake .
#    4: cmake -D<libname>_LIBRARY="..." -D<libname>_INCLUDE_DIR="..." .
#       where <libname> is any of {PTHREAD,OPENTHREADS,CURL,JPEG,PNG,ZLIB,SQUISH,GREYCSTORATION,GLUT}
#
# optional usage examples:
#
#    cmake -DCMAKE_BUILD_TYPE=DEBUG .
#    cmake -DCMAKE_BUILD_TYPE=RELEASE .
#    cmake -DCMAKE_VERBOSE_MAKEFILE=TRUE . (cmake .; make VERBOSE=1)
#    cmake -DCMAKE_INSTALL_PREFIX=/usr/local .
#    cmake -DBUILD_SHARED_LIBS=ON .

PROJECT(libMini)

CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

OPTION(BUILD_MINI_EXAMPLE "Build example application." OFF)
OPTION(BUILD_MINI_VIEWER "Build viewer application." OFF)
OPTION(BUILD_MINI_TOOLS "Build command line tools." OFF)

IF (BUILD_MINI_VIEWER OR BUILD_MINI_TOOLS)
   SET(BUILD_MINI_SFX ON)
ENDIF (BUILD_MINI_VIEWER OR BUILD_MINI_TOOLS)

IF (BUILD_MINI_EXAMPLE OR BUILD_MINI_VIEWER OR BUILD_MINI_TOOLS)
   SET(BUILD_MINI_WITH_GLUT ON)
ENDIF (BUILD_MINI_EXAMPLE OR BUILD_MINI_VIEWER OR BUILD_MINI_TOOLS)

INCLUDE(${CMAKE_CURRENT_SOURCE_DIR}/libMini-config.cmake)

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})

IF (BUILD_MINI_EXAMPLE)
   MAKE_MINI_EXECUTABLE(example)
ENDIF (BUILD_MINI_EXAMPLE)

IF (BUILD_MINI_VIEWER)
   MAKE_MINISFX_EXECUTABLE(viewer)
ENDIF (BUILD_MINI_VIEWER)

IF (BUILD_MINI_TOOLS)
   ADD_SUBDIRECTORY(tools)
ENDIF (BUILD_MINI_TOOLS)

IF (BUILD_MINI_VIEWER)
   INSTALL(
      TARGETS viewer
      RUNTIME DESTINATION bin
      )
ENDIF (BUILD_MINI_VIEWER)
