# cmake build file for libMini
# (c) by Stefan Roettger
#
# usage:
#
#    1: cmake .
#    2: cmake -DLIBMINI_THIRDPARTY_DIR="..." .
#    3: setenv LIBMINI_THIRDPARTY_DIR "..."; cmake .
#    4: cmake -D<libname>_LIBRARY="..." -D<libname>_INCLUDE_DIR="..." .
#       where <libname> is any of {PTHREAD,OPENTHREADS,CURL,JPEG,PNG,ZLIB,SQUISH,GREYCSTORATION,GLUT}
#
# optional usage examples:
#
#    cmake -DCMAKE_BUILD_TYPE=DEBUG .
#    cmake -DCMAKE_BUILD_TYPE=RELEASE .
#    cmake -DCMAKE_VERBOSE_MAKEFILE=TRUE . (cmake .; make VERBOSE=1)
#    cmake -DCMAKE_INSTALL_PREFIX=/usr/local .
#    cmake -DBUILD_SHARED_LIBS=ON .

PROJECT(libMini)

CMAKE_MINIMUM_REQUIRED(VERSION 2.8.3)

OPTION(BUILD_MINI_EXAMPLE "Build example application." OFF)
OPTION(BUILD_MINI_VIEWER "Build viewer application." OFF)
OPTION(BUILD_MINI_TOOLS "Build command line tools." OFF)

IF (BUILD_MINI_VIEWER OR BUILD_MINI_TOOLS)
   SET(BUILD_MINI_SFX ON)
ENDIF (BUILD_MINI_VIEWER OR BUILD_MINI_TOOLS)

IF (BUILD_MINI_EXAMPLE OR BUILD_MINI_VIEWER OR BUILD_MINI_TOOLS)
   SET(BUILD_MINI_WITH_GLUT ON)
ENDIF (BUILD_MINI_EXAMPLE OR BUILD_MINI_VIEWER OR BUILD_MINI_TOOLS)

# include libMini config file
INCLUDE(libMini-config.cmake)

# include libMini source list
INCLUDE(libMini.cmake)

ADD_LIBRARY(${MINI_NAME} ${MINI_SRCS} ${MINI_HDRS})
SET_TARGET_PROPERTIES(${MINI_NAME} PROPERTIES PUBLIC_HEADER "${MINI_HDRS}" DEBUG_POSTFIX "d")
TARGET_LINK_LIBRARIES(${MINI_NAME} ${OPENGL_LIBRARIES})

IF (BUILD_MINI_SFX)
   IF (NOT BUILD_MINI_STUB)
      ADD_LIBRARY(${MINISFX_NAME} ${MINISFX_SRCS} ${MINISFX_HDRS})
      SET_TARGET_PROPERTIES(${MINISFX_NAME} PROPERTIES PUBLIC_HEADER "${MINISFX_HDRS}" DEBUG_POSTFIX "d")
      TARGET_LINK_LIBRARIES(${MINISFX_NAME}
         ${MINI_NAME}
         ${OPENGL_LIBRARIES}
         ${THREAD_LIBRARY}
         ${CURL_LIBRARY}
         ${JPEG_LIBRARY}
         ${PNG_LIBRARY}
         ${ZLIB_LIBRARY}
         ${SQUISH_LIBRARY}
         )
   ENDIF (NOT BUILD_MINI_STUB)
ENDIF (BUILD_MINI_SFX)

INSTALL(
   TARGETS ${MINI_NAME}
   LIBRARY DESTINATION lib
   ARCHIVE DESTINATION lib
   PUBLIC_HEADER DESTINATION include/mini
   )

IF (BUILD_MINI_SFX)
   IF (NOT BUILD_MINI_STUB)
      INSTALL(
         TARGETS ${MINISFX_NAME}
         LIBRARY DESTINATION lib
         ARCHIVE DESTINATION lib
         PUBLIC_HEADER DESTINATION include/mini
         )
   ENDIF (NOT BUILD_MINI_STUB)
ENDIF (BUILD_MINI_SFX)

IF (BUILD_MINI_EXAMPLE)
   MAKE_MINI_EXECUTABLE(example)
ENDIF (BUILD_MINI_EXAMPLE)

IF (BUILD_MINI_VIEWER)
   MAKE_MINISFX_EXECUTABLE(viewer)
ENDIF (BUILD_MINI_VIEWER)

IF (BUILD_MINI_TOOLS)
   ADD_SUBDIRECTORY(tools)
ENDIF (BUILD_MINI_TOOLS)

IF (BUILD_MINI_VIEWER)
   INSTALL(
      TARGETS viewer
      RUNTIME DESTINATION bin
      )
ENDIF (BUILD_MINI_VIEWER)
